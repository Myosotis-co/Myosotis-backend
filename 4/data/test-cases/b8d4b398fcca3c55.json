{"uid":"b8d4b398fcca3c55","name":"test_email","fullName":"tests.test_main#test_email","historyId":"6a3e7f24da68bbb3f3352679c9a3908c","time":{"start":1702244639081,"stop":1702244639081,"duration":0},"status":"broken","statusMessage":"socket.gaierror: [Errno -3] Temporary failure in name resolution","statusTrace":"event_loop = <_UnixSelectorEventLoop running=False closed=False debug=False>\nrequest = <SubRequest 'async_db_engine' for <Function test_email>>, kwargs = {}\nfunc = <function async_db_engine at 0x7f43dd87c400>\nsetup = <function _wrap_asyncgen_fixture.<locals>._asyncgen_fixture_wrapper.<locals>.setup at 0x7f43dd9265c0>\nfinalizer = <function _wrap_asyncgen_fixture.<locals>._asyncgen_fixture_wrapper.<locals>.finalizer at 0x7f43dd926520>\n\n    @functools.wraps(fixture)\n    def _asyncgen_fixture_wrapper(\n        event_loop: asyncio.AbstractEventLoop, request: SubRequest, **kwargs: Any\n    ):\n        func = _perhaps_rebind_fixture_func(\n            fixture, request.instance, fixturedef.unittest\n        )\n        gen_obj = func(**_add_kwargs(func, kwargs, event_loop, request))\n    \n        async def setup():\n            res = await gen_obj.__anext__()\n            return res\n    \n        def finalizer() -> None:\n            \"\"\"Yield again, to finalize.\"\"\"\n    \n            async def async_finalizer() -> None:\n                try:\n                    await gen_obj.__anext__()\n                except StopAsyncIteration:\n                    pass\n                else:\n                    msg = \"Async generator fixture didn't stop.\"\n                    msg += \"Yield only once.\"\n                    raise ValueError(msg)\n    \n            event_loop.run_until_complete(async_finalizer())\n    \n>       result = event_loop.run_until_complete(setup())\n\n/opt/hostedtoolcache/Python/3.11.7/x64/lib/python3.11/site-packages/pytest_asyncio/plugin.py:299: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n/opt/hostedtoolcache/Python/3.11.7/x64/lib/python3.11/asyncio/base_events.py:653: in run_until_complete\n    return future.result()\n/opt/hostedtoolcache/Python/3.11.7/x64/lib/python3.11/site-packages/pytest_asyncio/plugin.py:281: in setup\n    res = await gen_obj.__anext__()\ntests/confest.py:19: in async_db_engine\n    async with engine.begin() as conn:\n/opt/hostedtoolcache/Python/3.11.7/x64/lib/python3.11/site-packages/sqlalchemy/ext/asyncio/base.py:60: in __aenter__\n    return await self.start(is_ctxmanager=True)\n/opt/hostedtoolcache/Python/3.11.7/x64/lib/python3.11/site-packages/sqlalchemy/ext/asyncio/engine.py:598: in start\n    await self.conn.start(is_ctxmanager=is_ctxmanager)\n/opt/hostedtoolcache/Python/3.11.7/x64/lib/python3.11/site-packages/sqlalchemy/ext/asyncio/engine.py:157: in start\n    await (greenlet_spawn(self.sync_engine.connect))\n/opt/hostedtoolcache/Python/3.11.7/x64/lib/python3.11/site-packages/sqlalchemy/util/_concurrency_py3k.py:126: in greenlet_spawn\n    result = context.throw(*sys.exc_info())\n/opt/hostedtoolcache/Python/3.11.7/x64/lib/python3.11/site-packages/sqlalchemy/future/engine.py:406: in connect\n    return super(Engine, self).connect()\n/opt/hostedtoolcache/Python/3.11.7/x64/lib/python3.11/site-packages/sqlalchemy/engine/base.py:3315: in connect\n    return self._connection_cls(self, close_with_result=close_with_result)\n/opt/hostedtoolcache/Python/3.11.7/x64/lib/python3.11/site-packages/sqlalchemy/engine/base.py:96: in __init__\n    else engine.raw_connection()\n/opt/hostedtoolcache/Python/3.11.7/x64/lib/python3.11/site-packages/sqlalchemy/engine/base.py:3394: in raw_connection\n    return self._wrap_pool_connect(self.pool.connect, _connection)\n/opt/hostedtoolcache/Python/3.11.7/x64/lib/python3.11/site-packages/sqlalchemy/engine/base.py:3361: in _wrap_pool_connect\n    return fn()\n/opt/hostedtoolcache/Python/3.11.7/x64/lib/python3.11/site-packages/sqlalchemy/pool/base.py:320: in connect\n    return _ConnectionFairy._checkout(self)\n/opt/hostedtoolcache/Python/3.11.7/x64/lib/python3.11/site-packages/sqlalchemy/pool/base.py:884: in _checkout\n    fairy = _ConnectionRecord.checkout(pool)\n/opt/hostedtoolcache/Python/3.11.7/x64/lib/python3.11/site-packages/sqlalchemy/pool/base.py:486: in checkout\n    rec = pool._do_get()\n/opt/hostedtoolcache/Python/3.11.7/x64/lib/python3.11/site-packages/sqlalchemy/pool/impl.py:145: in _do_get\n    with util.safe_reraise():\n/opt/hostedtoolcache/Python/3.11.7/x64/lib/python3.11/site-packages/sqlalchemy/util/langhelpers.py:70: in __exit__\n    compat.raise_(\n/opt/hostedtoolcache/Python/3.11.7/x64/lib/python3.11/site-packages/sqlalchemy/util/compat.py:208: in raise_\n    raise exception\n/opt/hostedtoolcache/Python/3.11.7/x64/lib/python3.11/site-packages/sqlalchemy/pool/impl.py:143: in _do_get\n    return self._create_connection()\n/opt/hostedtoolcache/Python/3.11.7/x64/lib/python3.11/site-packages/sqlalchemy/pool/base.py:266: in _create_connection\n    return _ConnectionRecord(self)\n/opt/hostedtoolcache/Python/3.11.7/x64/lib/python3.11/site-packages/sqlalchemy/pool/base.py:381: in __init__\n    self.__connect()\n/opt/hostedtoolcache/Python/3.11.7/x64/lib/python3.11/site-packages/sqlalchemy/pool/base.py:677: in __connect\n    with util.safe_reraise():\n/opt/hostedtoolcache/Python/3.11.7/x64/lib/python3.11/site-packages/sqlalchemy/util/langhelpers.py:70: in __exit__\n    compat.raise_(\n/opt/hostedtoolcache/Python/3.11.7/x64/lib/python3.11/site-packages/sqlalchemy/util/compat.py:208: in raise_\n    raise exception\n/opt/hostedtoolcache/Python/3.11.7/x64/lib/python3.11/site-packages/sqlalchemy/pool/base.py:673: in __connect\n    self.dbapi_connection = connection = pool._invoke_creator(self)\n/opt/hostedtoolcache/Python/3.11.7/x64/lib/python3.11/site-packages/sqlalchemy/engine/create.py:578: in connect\n    return dialect.connect(*cargs, **cparams)\n/opt/hostedtoolcache/Python/3.11.7/x64/lib/python3.11/site-packages/sqlalchemy/engine/default.py:598: in connect\n    return self.dbapi.connect(*cargs, **cparams)\n/opt/hostedtoolcache/Python/3.11.7/x64/lib/python3.11/site-packages/sqlalchemy/dialects/postgresql/asyncpg.py:780: in connect\n    await_only(self.asyncpg.connect(*arg, **kw)),\n/opt/hostedtoolcache/Python/3.11.7/x64/lib/python3.11/site-packages/sqlalchemy/util/_concurrency_py3k.py:68: in await_only\n    return current.driver.switch(awaitable)\n/opt/hostedtoolcache/Python/3.11.7/x64/lib/python3.11/site-packages/sqlalchemy/util/_concurrency_py3k.py:121: in greenlet_spawn\n    value = await result\n/opt/hostedtoolcache/Python/3.11.7/x64/lib/python3.11/site-packages/asyncpg/connection.py:2092: in connect\n    return await connect_utils._connect(\n/opt/hostedtoolcache/Python/3.11.7/x64/lib/python3.11/site-packages/asyncpg/connect_utils.py:895: in _connect\n    raise last_error\n/opt/hostedtoolcache/Python/3.11.7/x64/lib/python3.11/site-packages/asyncpg/connect_utils.py:881: in _connect\n    return await _connect_addr(\n/opt/hostedtoolcache/Python/3.11.7/x64/lib/python3.11/site-packages/asyncpg/connect_utils.py:773: in _connect_addr\n    return await __connect_addr(params, timeout, True, *args)\n/opt/hostedtoolcache/Python/3.11.7/x64/lib/python3.11/site-packages/asyncpg/connect_utils.py:825: in __connect_addr\n    tr, pr = await compat.wait_for(connector, timeout=timeout)\n/opt/hostedtoolcache/Python/3.11.7/x64/lib/python3.11/site-packages/asyncpg/compat.py:56: in wait_for\n    return await asyncio.wait_for(fut, timeout)\n/opt/hostedtoolcache/Python/3.11.7/x64/lib/python3.11/asyncio/tasks.py:489: in wait_for\n    return fut.result()\n/opt/hostedtoolcache/Python/3.11.7/x64/lib/python3.11/site-packages/asyncpg/connect_utils.py:684: in _create_ssl_connection\n    tr, pr = await loop.create_connection(\n/opt/hostedtoolcache/Python/3.11.7/x64/lib/python3.11/asyncio/base_events.py:1045: in create_connection\n    infos = await self._ensure_resolved(\n/opt/hostedtoolcache/Python/3.11.7/x64/lib/python3.11/asyncio/base_events.py:1419: in _ensure_resolved\n    return await loop.getaddrinfo(host, port, family=family, type=type,\n/opt/hostedtoolcache/Python/3.11.7/x64/lib/python3.11/asyncio/base_events.py:867: in getaddrinfo\n    return await self.run_in_executor(\n/opt/hostedtoolcache/Python/3.11.7/x64/lib/python3.11/concurrent/futures/thread.py:58: in run\n    result = self.fn(*self.args, **self.kwargs)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nhost = 'db', port = 5432, family = 0, type = <SocketKind.SOCK_STREAM: 1>\nproto = 0, flags = 0\n\n    def getaddrinfo(host, port, family=0, type=0, proto=0, flags=0):\n        \"\"\"Resolve host and port into list of address info entries.\n    \n        Translate the host/port argument into a sequence of 5-tuples that contain\n        all the necessary arguments for creating a socket connected to that service.\n        host is a domain name, a string representation of an IPv4/v6 address or\n        None. port is a string service name such as 'http', a numeric port number or\n        None. By passing None as the value of host and port, you can pass NULL to\n        the underlying C API.\n    \n        The family, type and proto arguments can be optionally specified in order to\n        narrow the list of addresses returned. Passing zero as a value for each of\n        these arguments selects the full range of results.\n        \"\"\"\n        # We override this function since we want to translate the numeric family\n        # and socket type values to enum constants.\n        addrlist = []\n>       for res in _socket.getaddrinfo(host, port, family, type, proto, flags):\nE       socket.gaierror: [Errno -3] Temporary failure in name resolution\n\n/opt/hostedtoolcache/Python/3.11.7/x64/lib/python3.11/socket.py:962: gaierror","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"event_loop","time":{"start":1702244639083,"stop":1702244639084,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"_session_faker","time":{"start":1702244639084,"stop":1702244639175,"duration":91},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"async_db_engine","time":{"start":1702244639175,"stop":1702244639186,"duration":11},"status":"broken","statusMessage":"socket.gaierror: [Errno -3] Temporary failure in name resolution\n","statusTrace":"  File \"/opt/hostedtoolcache/Python/3.11.7/x64/lib/python3.11/site-packages/pluggy/_callers.py\", line 39, in _multicall\n    res = hook_impl.function(*args)\n          ^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/opt/hostedtoolcache/Python/3.11.7/x64/lib/python3.11/site-packages/_pytest/fixtures.py\", line 1123, in pytest_fixture_setup\n    result = call_fixture_func(fixturefunc, request, kwargs)\n             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/opt/hostedtoolcache/Python/3.11.7/x64/lib/python3.11/site-packages/_pytest/fixtures.py\", line 902, in call_fixture_func\n    fixture_result = fixturefunc(**kwargs)\n                     ^^^^^^^^^^^^^^^^^^^^^\n  File \"/opt/hostedtoolcache/Python/3.11.7/x64/lib/python3.11/site-packages/pytest_asyncio/plugin.py\", line 299, in _asyncgen_fixture_wrapper\n    result = event_loop.run_until_complete(setup())\n             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/opt/hostedtoolcache/Python/3.11.7/x64/lib/python3.11/asyncio/base_events.py\", line 653, in run_until_complete\n    return future.result()\n           ^^^^^^^^^^^^^^^\n  File \"/opt/hostedtoolcache/Python/3.11.7/x64/lib/python3.11/site-packages/pytest_asyncio/plugin.py\", line 281, in setup\n    res = await gen_obj.__anext__()\n          ^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/runner/work/Myosotis-backend/Myosotis-backend/tests/confest.py\", line 19, in async_db_engine\n    async with engine.begin() as conn:\n  File \"/opt/hostedtoolcache/Python/3.11.7/x64/lib/python3.11/site-packages/sqlalchemy/ext/asyncio/base.py\", line 60, in __aenter__\n    return await self.start(is_ctxmanager=True)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/opt/hostedtoolcache/Python/3.11.7/x64/lib/python3.11/site-packages/sqlalchemy/ext/asyncio/engine.py\", line 598, in start\n    await self.conn.start(is_ctxmanager=is_ctxmanager)\n  File \"/opt/hostedtoolcache/Python/3.11.7/x64/lib/python3.11/site-packages/sqlalchemy/ext/asyncio/engine.py\", line 157, in start\n    await (greenlet_spawn(self.sync_engine.connect))\n  File \"/opt/hostedtoolcache/Python/3.11.7/x64/lib/python3.11/site-packages/sqlalchemy/util/_concurrency_py3k.py\", line 126, in greenlet_spawn\n    result = context.throw(*sys.exc_info())\n             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/opt/hostedtoolcache/Python/3.11.7/x64/lib/python3.11/site-packages/sqlalchemy/future/engine.py\", line 406, in connect\n    return super(Engine, self).connect()\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/opt/hostedtoolcache/Python/3.11.7/x64/lib/python3.11/site-packages/sqlalchemy/engine/base.py\", line 3315, in connect\n    return self._connection_cls(self, close_with_result=close_with_result)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/opt/hostedtoolcache/Python/3.11.7/x64/lib/python3.11/site-packages/sqlalchemy/engine/base.py\", line 96, in __init__\n    else engine.raw_connection()\n         ^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/opt/hostedtoolcache/Python/3.11.7/x64/lib/python3.11/site-packages/sqlalchemy/engine/base.py\", line 3394, in raw_connection\n    return self._wrap_pool_connect(self.pool.connect, _connection)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/opt/hostedtoolcache/Python/3.11.7/x64/lib/python3.11/site-packages/sqlalchemy/engine/base.py\", line 3361, in _wrap_pool_connect\n    return fn()\n           ^^^^\n  File \"/opt/hostedtoolcache/Python/3.11.7/x64/lib/python3.11/site-packages/sqlalchemy/pool/base.py\", line 320, in connect\n    return _ConnectionFairy._checkout(self)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/opt/hostedtoolcache/Python/3.11.7/x64/lib/python3.11/site-packages/sqlalchemy/pool/base.py\", line 884, in _checkout\n    fairy = _ConnectionRecord.checkout(pool)\n            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/opt/hostedtoolcache/Python/3.11.7/x64/lib/python3.11/site-packages/sqlalchemy/pool/base.py\", line 486, in checkout\n    rec = pool._do_get()\n          ^^^^^^^^^^^^^^\n  File \"/opt/hostedtoolcache/Python/3.11.7/x64/lib/python3.11/site-packages/sqlalchemy/pool/impl.py\", line 145, in _do_get\n    with util.safe_reraise():\n  File \"/opt/hostedtoolcache/Python/3.11.7/x64/lib/python3.11/site-packages/sqlalchemy/util/langhelpers.py\", line 70, in __exit__\n    compat.raise_(\n  File \"/opt/hostedtoolcache/Python/3.11.7/x64/lib/python3.11/site-packages/sqlalchemy/util/compat.py\", line 208, in raise_\n    raise exception\n  File \"/opt/hostedtoolcache/Python/3.11.7/x64/lib/python3.11/site-packages/sqlalchemy/pool/impl.py\", line 143, in _do_get\n    return self._create_connection()\n           ^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/opt/hostedtoolcache/Python/3.11.7/x64/lib/python3.11/site-packages/sqlalchemy/pool/base.py\", line 266, in _create_connection\n    return _ConnectionRecord(self)\n           ^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/opt/hostedtoolcache/Python/3.11.7/x64/lib/python3.11/site-packages/sqlalchemy/pool/base.py\", line 381, in __init__\n    self.__connect()\n  File \"/opt/hostedtoolcache/Python/3.11.7/x64/lib/python3.11/site-packages/sqlalchemy/pool/base.py\", line 677, in __connect\n    with util.safe_reraise():\n  File \"/opt/hostedtoolcache/Python/3.11.7/x64/lib/python3.11/site-packages/sqlalchemy/util/langhelpers.py\", line 70, in __exit__\n    compat.raise_(\n  File \"/opt/hostedtoolcache/Python/3.11.7/x64/lib/python3.11/site-packages/sqlalchemy/util/compat.py\", line 208, in raise_\n    raise exception\n  File \"/opt/hostedtoolcache/Python/3.11.7/x64/lib/python3.11/site-packages/sqlalchemy/pool/base.py\", line 673, in __connect\n    self.dbapi_connection = connection = pool._invoke_creator(self)\n                                         ^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/opt/hostedtoolcache/Python/3.11.7/x64/lib/python3.11/site-packages/sqlalchemy/engine/create.py\", line 578, in connect\n    return dialect.connect(*cargs, **cparams)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/opt/hostedtoolcache/Python/3.11.7/x64/lib/python3.11/site-packages/sqlalchemy/engine/default.py\", line 598, in connect\n    return self.dbapi.connect(*cargs, **cparams)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/opt/hostedtoolcache/Python/3.11.7/x64/lib/python3.11/site-packages/sqlalchemy/dialects/postgresql/asyncpg.py\", line 780, in connect\n    await_only(self.asyncpg.connect(*arg, **kw)),\n    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/opt/hostedtoolcache/Python/3.11.7/x64/lib/python3.11/site-packages/sqlalchemy/util/_concurrency_py3k.py\", line 68, in await_only\n    return current.driver.switch(awaitable)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/opt/hostedtoolcache/Python/3.11.7/x64/lib/python3.11/site-packages/sqlalchemy/util/_concurrency_py3k.py\", line 121, in greenlet_spawn\n    value = await result\n            ^^^^^^^^^^^^\n  File \"/opt/hostedtoolcache/Python/3.11.7/x64/lib/python3.11/site-packages/asyncpg/connection.py\", line 2092, in connect\n    return await connect_utils._connect(\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/opt/hostedtoolcache/Python/3.11.7/x64/lib/python3.11/site-packages/asyncpg/connect_utils.py\", line 895, in _connect\n    raise last_error\n  File \"/opt/hostedtoolcache/Python/3.11.7/x64/lib/python3.11/site-packages/asyncpg/connect_utils.py\", line 881, in _connect\n    return await _connect_addr(\n           ^^^^^^^^^^^^^^^^^^^^\n  File \"/opt/hostedtoolcache/Python/3.11.7/x64/lib/python3.11/site-packages/asyncpg/connect_utils.py\", line 773, in _connect_addr\n    return await __connect_addr(params, timeout, True, *args)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/opt/hostedtoolcache/Python/3.11.7/x64/lib/python3.11/site-packages/asyncpg/connect_utils.py\", line 825, in __connect_addr\n    tr, pr = await compat.wait_for(connector, timeout=timeout)\n             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/opt/hostedtoolcache/Python/3.11.7/x64/lib/python3.11/site-packages/asyncpg/compat.py\", line 56, in wait_for\n    return await asyncio.wait_for(fut, timeout)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/opt/hostedtoolcache/Python/3.11.7/x64/lib/python3.11/asyncio/tasks.py\", line 489, in wait_for\n    return fut.result()\n           ^^^^^^^^^^^^\n  File \"/opt/hostedtoolcache/Python/3.11.7/x64/lib/python3.11/site-packages/asyncpg/connect_utils.py\", line 684, in _create_ssl_connection\n    tr, pr = await loop.create_connection(\n             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/opt/hostedtoolcache/Python/3.11.7/x64/lib/python3.11/asyncio/base_events.py\", line 1045, in create_connection\n    infos = await self._ensure_resolved(\n            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/opt/hostedtoolcache/Python/3.11.7/x64/lib/python3.11/asyncio/base_events.py\", line 1419, in _ensure_resolved\n    return await loop.getaddrinfo(host, port, family=family, type=type,\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/opt/hostedtoolcache/Python/3.11.7/x64/lib/python3.11/asyncio/base_events.py\", line 867, in getaddrinfo\n    return await self.run_in_executor(\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/opt/hostedtoolcache/Python/3.11.7/x64/lib/python3.11/concurrent/futures/thread.py\", line 58, in run\n    result = self.fn(*self.args, **self.kwargs)\n             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/opt/hostedtoolcache/Python/3.11.7/x64/lib/python3.11/socket.py\", line 962, in getaddrinfo\n    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false}],"afterStages":[{"name":"event_loop::0","time":{"start":1702244640128,"stop":1702244640129,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"labels":[{"name":"tag","value":"asyncio"},{"name":"parentSuite","value":"tests"},{"name":"suite","value":"test_main"},{"name":"host","value":"fv-az180-630"},{"name":"thread","value":"2733-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.test_main"},{"name":"resultFormat","value":"allure2"}],"parameters":[],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Test defects","matchedStatuses":[],"flaky":false}],"tags":["asyncio"]},"source":"b8d4b398fcca3c55.json","parameterValues":[]}